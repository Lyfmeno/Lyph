# COLORS
RED='\033[4;31m\033[5m'
CYAN='\033[0;36m'
BLUE='\033[0;34m'
ORANGE='\033[38;5;209m\e[1m'
PURPLE='\033[38;5;207m\e[1m'
PINK='\033[38;5;204m\e[1m'
PEACH='\033[38;5;223m\e[1m'
YELLOW='\033[38;5;226m\e[1m'
GREEN='\033[1;32m'
NC='\033[0m'

# ALIAS
alias ll='ls -l'
alias l='ls -la'
alias cpl='gcc -Wall -Wextra -Werror'
alias dcpl='rm -rf a.out'
alias gits='git status'
alias gitl='git log'
alias mcl='rt; make fclean'
alias mre='rt; make re'
alias vgrind='valgrind --leak-check=full'
alias rt='printf "\033c"'
alias lock='/mnt/nfs/homes/hlevi/Lock/lock/lock'
alias src='source ~/.zshrc'
alias zedit='code ~/.zshrc'
alias kode='code /mnt/nfs/homes/hlevi/42'
alias dilf='diff -r'

# FUNCTIONS
function mkc()
{
	cat ~/.templates/.makexc > Makefile
	sed -i "s/a.out/$1/g" Makefile
	echo -e "${PEACH}-----------------------${NC}"
	echo -e "${PINK} Created a C Makefile${NC}"
	echo -e "${PEACH}-----------------------${NC}"
}

function mkcpp()
{
	cat ~/.templates/.makexcpp > Makefile
	sed -i "s/a.out/$1/g" Makefile
	echo -e "${PEACH}------------------------${NC}"
	echo -e "${PINK} Created a CPP Makefile${NC}"
	echo -e "${PEACH}------------------------${NC}"
}

function genhpp()
{.templates/.basicHPP > $fileName
		sed -i "s/CLASSNAME/${(P)i}/g" $fileName
		echo -e "${PEACH}----------------------------${NC}"
		echo -e "${PINK} Created a Basic CPP HEADER${NC}"
		echo -e "${PEACH}----------------------------${NC}"
	done
}

function gencpp()
{
	if [ $# -lt 1 ]; then
		return
	fi
	for i in {1..$#}; do
		fileName="${(P)i}.cpp"
		cat ~/.templates/.basicCPP > $fileName
		sed -i "s/CLASSNAME/${(P)i}/g" $fileName
		echo -e "${PEACH}--------------------------${NC}"
		echo -e "${PINK} Created a Basic CPP FILE${NC}"
		echo -e "${PEACH}--------------------------${NC}"
	done
}

function genbch()
{
	if [ $# -lt 1 ]; then
		return
	fi
	for i in {1..$#}; do
		name=${(P)i}
		gencpp $name
		genhpp $name
	done
}

function llog()
{
	echo -e "${PEACH}------------------------------------------------------------${NC}"
	printf ${ORANGE}
	git log | head -5 | tail -4 | hea
	for i in {1..$#}; do
		fileName="${(P)i}.hpp"
		cat ~/.templates/.basicHPP > $fileName
		sed -i "s/CLASSNAME/${(P)i}/g" $fileName
		echo -e "${PEACH}----------------------------${NC}"
		echo -e "${PINK} Created a Basic CPP HEADER${NC}"
		echo -e "${PEACH}----------------------------${NC}"
	done
}

function gencpp()
{
	if [ $# -lt 1 ]; then
		return
	fi
	for i in {1..$#}; do
		fileName="${(P)i}.cpp"
		cat ~/.templates/.basicCPP > $fileName
		sed -i "s/CLASSNAME/${(P)i}/g" $fileName
		echo -e "${PEACH}--------------------------${NC}"
		echo -e "${PINK} Created a Basic CPP FILE${NC}"
		echo -e "${PEACH}--------------------------${NC}"
	done
}

function genbch()
{
	if [ $# -lt 1 ]; then
		return
	fi
	for i in {1..$#}; do
		name=${(P)i}
		gencpp $name
		genhpp $name
	done
}

function llog()
{
	echo -e "${PEACH}------------------------------------------------------------${NC}"
	printf ${ORANGE}
	git log | head -5 | tail -4 | head -3
	printf ${PINK}
	git log | head -5 | tail -1
	printf ${NC}
    echo -e "${PEACH}------------------------------------------------------------${NC}"
}

function fullgit()
{
    git add -A
    if [ $? -eq 0 ]; then
        echo -e "### ${YELLOW}Adding${NC} content to the git repository was ${GREEN}SUCCESSFULL${NC} ###"
        git commit -m "$*"
        echo -e "### The ${ORANGE}Commit${NC} was ${GREEN}SUCCESSFULL${NC} ###"
		git push
        if [ $? -eq 0 ]; then
            echo -e "### ${PURPLE}Pushing${NC} the commited content was ${GREEN}SUCCESSFULL${NC} ###"
            llog
        else
            echo -e "### ${PURPLE}Pushing${NC} the commited content was a ${RED}FAILURE${NC} ###"
            echo -e "--- The program won't try to ${PURPLE}push${NC} ---"
        fi
    else
        echo -e "### ${YELLOW}Adding${NC} content to the git repository was a ${RED}FAILURE${NC} ###"
        echo -e "--- The program won't try to ${ORANGE}commit${NC} or ${PURPLE}push${NC} ---"
    fi
}
